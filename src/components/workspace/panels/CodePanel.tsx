import React, { useState } from "react";
import { Button } from "@/components/ui/button";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { Copy, Download, FileCode } from "lucide-react";

export default function CodePanel() {
  const [selectedFile, setSelectedFile] = useState("App.jsx");

  // Sample code for demonstration
  const sampleCode = {
    "App.jsx": `import React from 'react';
import { BrowserRouter, Routes, Route } from 'react-router-dom';
import Home from './pages/Home';
import Dashboard from './pages/Dashboard';
import Login from './pages/Login';
import SignUp from './pages/SignUp';
import { AuthProvider } from './contexts/AuthContext';

function App() {
  return (
    <AuthProvider>
      <BrowserRouter>
        <Routes>
          <Route path="/" element={<Home />} />
          <Route path="/dashboard" element={<Dashboard />} />
          <Route path="/login" element={<Login />} />
          <Route path="/signup" element={<SignUp />} />
        </Routes>
      </BrowserRouter>
    </AuthProvider>
  );
}

export default App;`,
    "Home.jsx": `import React from 'react';
import { Link } from 'react-router-dom';
import { useAuth } from '../contexts/AuthContext';

function Home() {
  const { user } = useAuth();
  
  return (
    <div className="min-h-screen bg-gray-50">
      <header className="bg-white shadow-sm">
        <nav className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex justify-between h-16">
            <div className="flex">
              <div className="flex-shrink-0 flex items-center">
                <h1 className="text-xl font-bold">My App</h1>
              </div>
            </div>
            <div className="flex items-center">
              {user ? (
                <Link to="/dashboard" className="bg-blue-600 text-white px-4 py-2 rounded-md">
                  Dashboard
                </Link>
              ) : (
                <Link to="/login" className="bg-blue-600 text-white px-4 py-2 rounded-md">
                  Sign In
                </Link>
              )}
            </div>
          </div>
        </nav>
      </header>
      
      <main className="max-w-7xl mx-auto py-12 px-4 sm:px-6 lg:px-8">
        <div className="text-center">
          <h2 className="text-3xl font-extrabold tracking-tight text-gray-900 sm:text-4xl">
            Welcome to My App
          </h2>
          <p className="mt-4 text-lg text-gray-500">
            This is a sample application generated by AI.
          </p>
        </div>
      </main>
    </div>
  );
}

export default Home;`,
    "AuthContext.jsx": `import React, { createContext, useContext, useState, useEffect } from 'react';
import { supabase } from '../lib/supabase';

const AuthContext = createContext();

export function useAuth() {
  return useContext(AuthContext);
}

export function AuthProvider({ children }) {
  const [user, setUser] = useState(null);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    // Check for active session
    const session = supabase.auth.getSession();
    setUser(session?.user ?? null);
    setLoading(false);

    // Listen for auth changes
    const { data: { subscription } } = supabase.auth.onAuthStateChange(
      (event, session) => {
        setUser(session?.user ?? null);
        setLoading(false);
      }
    );

    return () => subscription.unsubscribe();
  }, []);

  const value = {
    user,
    loading,
    signIn: (email, password) => supabase.auth.signInWithPassword({ email, password }),
    signUp: (email, password) => supabase.auth.signUp({ email, password }),
    signOut: () => supabase.auth.signOut(),
  };

  return (
    <AuthContext.Provider value={value}>
      {!loading && children}
    </AuthContext.Provider>
  );
}
`,
  };

  return (
    <div className="flex flex-col h-full bg-white rounded-lg border shadow-sm">
      <div className="p-3 border-b flex justify-between items-center">
        <div>
          <h3 className="font-medium text-lg">Code Editor</h3>
          <p className="text-sm text-muted-foreground">
            View and edit generated code
          </p>
        </div>
        <div className="flex gap-2">
          <Button variant="outline" size="sm">
            <Copy className="h-4 w-4 mr-1" /> Copy
          </Button>
          <Button variant="outline" size="sm">
            <Download className="h-4 w-4 mr-1" /> Download
          </Button>
        </div>
      </div>

      <div className="flex-1 flex">
        <div className="w-48 border-r p-2 overflow-auto">
          <h4 className="text-sm font-medium mb-2 px-2">Files</h4>
          <div className="space-y-1">
            {Object.keys(sampleCode).map((file) => (
              <Button
                key={file}
                variant={selectedFile === file ? "secondary" : "ghost"}
                className="w-full justify-start text-sm h-8"
                onClick={() => setSelectedFile(file)}
              >
                <FileCode className="h-4 w-4 mr-2" />
                {file}
              </Button>
            ))}
          </div>
        </div>

        <div className="flex-1 overflow-auto bg-muted/10">
          <pre className="p-4 text-sm font-mono overflow-auto h-full">
            <code>{sampleCode[selectedFile]}</code>
          </pre>
        </div>
      </div>
    </div>
  );
}
